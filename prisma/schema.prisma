generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  phone    String
  name     String?
  password String
  avatar   String?

  authoredProjects Project[]     @relation("Author")
  projects         Project[]     @relation("UserProjects")
  UserProject      UserProject[]
  UserTasks        UserTasks[]
}

model Project {
  id       Int    @id @default(autoincrement())
  name     String
  authorId Int

  author      User          @relation("Author", fields: [authorId], references: [id])
  members     User[]        @relation("UserProjects")
  UserProject UserProject[]
  boards      Board[]
}

model Board {
  id        Int    @id @default(autoincrement())
  name      String
  projectId Int

  project Project  @relation(fields: [projectId], references: [id])
  columns Column[]
}

model Column {
  id      Int    @id @default(autoincrement())
  name    String
  boardId Int

  Board Board  @relation(fields: [boardId], references: [id])
  tasks Task[]
}

model Task {
  id       Int     @id @default(autoincrement())
  title    String
  content  String?
  columnId Int
  userId   Int

  cover     String?
  column    Column      @relation(fields: [columnId], references: [id])
  UserTasks UserTasks[]
}

model UserProject {
  userId    Int
  projectId Int

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
}

model UserTasks {
  userId Int
  taskId Int

  user User @relation(fields: [userId], references: [id])
  task Task @relation(fields: [taskId], references: [id])

  @@id([userId, taskId])
}
